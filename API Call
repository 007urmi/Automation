import requests
import pandas as pd
from csv import DictReader
import time
import os
import glob
from func_timeout import func_timeout, FunctionTimedOut

import logging

file_name = input("Enter the file name with extension:")
name = file_name.split('.')
if name[1] == 'csv':
    Underserved_folder_path = 'C://Users//urmimala.poddar//Desktop//{}.csv'.format(name[0])
    Underserved_data = pd.read_csv(Underserved_folder_path)
else:
    Underserved_folder_path = 'C://Users//urmimala.poddar//Desktop//{}.xlsx'.format(name[0])
    Underserved_data = pd.read_excel(Underserved_folder_path)

Underserved_data["GEOID10"] = Underserved_data["GEOID10"].values.astype(str)
CountyFips = Underserved_data["GEOID10"].str[:5]
count = 1
total_api_calls = len(Underserved_data)
api_time_out_secs = 60
api_limit = 10
for cb in Underserved_data["GEOID10"]:
    parameters = {"cb": cb, "token": "PRRIUVVWACNQYHX", "fname": cb + ".csv"}

    csv_path = "C://Users//urmimala.poddar//Documents//CQA Data//Automated//MO_Location//{}{}".format(
        parameters["cb"],
         ".csv")

    # url = 'https://apps.costquest.com/api/fabriccsv?cb=171279701001108&token=PRRIUVVWACNQYHX&filename=171279701001108.csv'

    f = requests.get("https://apps.costquest.com/api/fabriccsv", params=parameters).content.decode('utf-8')
    reader = DictReader(f.split('\n'))
    csv_dict_list = list(reader)
    data = pd.DataFrame.from_dict(csv_dict_list, orient='columns')
    data.to_csv(csv_path)

    for i in range(total_api_calls):
        if count == api_limit:
            time.sleep(api_time_out_secs)
            api_limit = api_limit + 10
            logging.info("Downloaded 10CBs Fabric Data, Please wait")
    logging.info("Downloaded data for {}".format(parameters['cb']))
    count += 1

file_path = "C://Users//urmimala.poddar//Documents//CQA Data//Automated//MO_Location"
location_data_path = "C://Users//urmimala.poddar//Documents//CQA Data//{}{}".format("locations_Data_MO_Location",
                                                                                        ".csv")
output_files = glob.glob(os.path.join(file_path, CountyFips.iloc[0] + "*.csv"))
df_from_each_file = (pd.read_csv(f, sep=',') for f in output_files)
df_merged = pd.concat(df_from_each_file, ignore_index=True)
df_merged.to_csv(location_data_path)
